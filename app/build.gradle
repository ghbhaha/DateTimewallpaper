apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply plugin: 'kotlin-kapt'

apply plugin: 'AndResGuard'



def releaseTime() {
    def date = new Date()
    def formattedDate = date.format('yyyy_MM_dd_HH_mm')
    return formattedDate
}

android {
    compileSdkVersion 28

    defaultConfig {
        applicationId "com.suda.datetimewallpaper"
        flavorDimensions "NORMAL"
        minSdkVersion 19
        targetSdkVersion 28
        versionCode 30
        versionName "2.32.0508"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true
    }
    Properties props = new Properties()
    props.load(new FileInputStream('/Users/guhaibo/AndroidStudioProjects/as/JzApp/app/signing.properties'))

    signingConfigs {
        myConfig {
            storeFile file('/Users/guhaibo/AndroidStudioProjects/as/JzApp/app/suda.jks')
            storePassword props['KEY_PASSWORD']
            keyAlias props['KEY_ALIAS']
            keyPassword props['KEYSTORE_PASSWORD']
        }
    }

    lintOptions {
        abortOnError false
    }


    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            signingConfig signingConfigs.myConfig
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            signingConfig signingConfigs.myConfig
        }
    }

    productFlavors {
        KUAN {
        }
        google {
        }
        yingyongbao {
            applicationId = "com.suda.datetimewallpaper.yingyongbao"
        }

        productFlavors.all { flavor ->
            flavor.manifestPlaceholders = [UMENG_CHANNEL_VALUE: name]
        }
    }

    applicationVariants.all { variant ->
        variant.outputs.all {
            if (variant.buildType.name == "release") {
                outputFileName = "DateTimeWallPaper_${variant.versionCode}-${variant.versionName}-${releaseTime()}.apk"
            }
        }
    }
}

andResGuard {
    // mappingFile = file("./resource_mapping.txt")
    mappingFile = null
    use7zip = true
    useSign = true
    // it will keep the origin path of your resources when it's true
    keepRoot = false
    whiteList = [
            // your icon
            "R.drawable.icon",
            // for fabric
            "R.string.com.crashlytics.*",
            // for umeng update
            "R.string.umeng*",
            "R.string.UM*",
            "R.string.tb_*",
            "R.string.rc_*",
            "R.layout.umeng*",
            "R.layout.tb_*",
            "R.layout.rc_*",
            "R.drawable.umeng*",
            "R.drawable.tb_*",
            "R.drawable.rc_*",
            "R.drawable.u1*",
            "R.drawable.u2*",
            "R.anim.umeng*",
            "R.color.umeng*",
            "R.color.tb_*",
            "R.color.rc_*",
            "R.style.*UM*",
            "R.style.umeng*",
            "R.style.rc_*",
            "R.id.umeng*",
            "R.id.rc_*",
            // umeng share for sina
            "R.drawable.sina*",
            // for google-services.json
            "R.string.google_app_id",
            "R.string.gcm_defaultSenderId",
            "R.string.default_web_client_id",
            "R.string.ga_trackingId",
            "R.string.firebase_database_url",
            "R.string.google_api_key",
            "R.string.google_crash_reporting_api_key",
            "R.dimen.rc_*"
    ]
    compressFilePattern = [
            "*.png",
            "*.jpg",
            "*.jpeg",
            "*.gif",
            "resources.arsc"
    ]
    sevenzip {
        artifact = 'com.tencent.mm:SevenZip:1.2.15'
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
//    testImplementation 'junit:junit:4.12'
//    androidTestImplementation 'com.android.support.test:runner:1.0.2'
//    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    implementation 'com.github.bumptech.glide:glide:4.9.0'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0-beta01'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'androidx.vectordrawable:vectordrawable:1.0.0-beta01'
    implementation 'androidx.appcompat:appcompat:1.0.0-beta01'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.9.0'
    kapt 'com.github.bumptech.glide:compiler:4.9.0'
    implementation 'com.zhihu.android:matisse:0.5.2-beta3'
    implementation 'pub.devrel:easypermissions:3.0.0'
    implementation 'com.umeng.umsdk:analytics:7.5.4'
    implementation 'com.umeng.umsdk:common:1.5.4'
    implementation 'com.alibaba:fastjson:1.1.70.android'

    implementation 'me.drakeet.materialdialog:library:1.3.1'
    implementation 'com.github.daniel-stoneuk:material-about-library:2.4.2'
    implementation 'com.squareup.okhttp3:okhttp:3.6.0'
    implementation 'com.squareup.okio:okio:1.11.0'
    implementation 'com.jaredrummler:colorpicker:1.1.0'
    implementation 'com.github.clans:fab:1.6.4'

    implementation 'io.reactivex.rxjava2:rxjava:2.0.1'
    implementation 'io.reactivex.rxjava2:rxandroid:2.0.1'

    implementation 'com.amap.api:location:latest.integration'

}
